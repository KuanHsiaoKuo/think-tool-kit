@startmindmap
* 区块链与web3

** 基础层（Layer1）
*** 区块链协议(Blockchain Protocol)
****:比特币(Bitcoin, BTC)
<code>
第一个区块链系统，具有去中心化和匿名性，采用PoW共识算法，无法在区块链上运行智能合约。
</code>;
****:以太坊(Ethereum, ETH)
<code>
具有可编程高级语言Solidity，支持智能合约和DApp应用的区块链系统，采用PoW或PoS共识算法。
</code>;
****:EOS(EOS)
<code>
基于DPoS共识算法的平台级区块链系统，支持高性能的交易处理和可扩展性。
</code>;
****:Ripple(XRP)
<code>
企业级网络，通过XRP代币实现全球汇款和资产交易，采用特定节点集合控制的共识算法。
</code>;
*** 共识算法(Consensus algorithm)
****:工作量证明(Proof of Work, PoW)
<code>
简单易懂的共识算法，但消耗大量电力和资源，不适用于大型网络。
</code>;
****:权益证明(Proof of Stake, PoS)
<code>
通过抵押代币来参与共识，避免能源浪费，但可能会导致富者越富的现象。
</code>;
****:委托权益证明(Delegated Proof of Stake, DPoS)
<code>
通过委托验证节点来实现共识，避免中心化问题，支持高吞吐量和低延迟。
</code>;
****:拜占庭容错(Byzantine Fault Tolerance, PBFT)
<code>
适用于高性能企业区块链，但需要解决节点验证和授权等问题。
</code>;

****:权益证明(Proof of Stake, PoS)
<code>
通过固定代币数量占据网络的区块生成权来达成共识，节约了能源和计算资源，但可能造成贫富分化问题。
</code>;

****:股份授权证明(Delegated Proof of Stake, DPos)
<code>
权益证明的改进版，代币所有者可以代表其他人投票，选举区块生产节点，速度快，效率高，但需要选举过程的公正性。
</code>;

****:Raft
<code>
一种快速而容错的分布式共识算法，主要用于分布式系统中数据一致性的实现。
</code>;
****:共识机制(Mechanism Design)
<code>
设计游戏理论、激励机制等来促进节点合作的策略机制。
</code>;
*** 加密算法(Cryptography)
****:哈希算法(Hash Function)
<code>
常见的哈希函数包括SHA-256、MD5等，用于对交易和区块进行加密。
</code>;
****:非对称加密算法(Asymmetric Cryptography)
<code>
包括RSA、ECDSA等，用于数字签名和公私钥加密。
</code>;
****:对称加密算法(Symmetric Cryptography)
<code>
包括AES、DES等，用于对数据进行加密和解密。
</code>;
****:数字签名(Digital Signature)
<code>
通过私钥签名验证来确保交易的真实性和完整性。
</code>;
*** 区块链基础知识(Blockchain Fundamentals)
****:区块(Block)
<code>
记录一组交易和一些元数据的数据块，形成区块链的基本单位。
</code>;
****:交易(Transaction)
<code>
记录数据传输、状态变化等信息的操作，是区块链的基本元素。
</code>;
****:节点(Node)
<code>
运行区块链协议的设备，用于存储和传输数据，包括全节点、轻节点、智能合约节点等。
</code>;
****:挖矿(Mining)
<code>
通过计算难题来创建新区块，获得代币作为激励的过程。
</code>;
****:智能合约(Smart Contract)
<code>
能够解释执行的计算机程序，用于实现自动化的交易和合约。
</code>;
*** 区块链应用场景(Blockchain Application)
****:区块链在金融领域的应用(Application in finance)
<code>
银行间汇款、数字货币、股票等金融应用场景。
</code>;
****:区块链在供应链管理的应用(Application in Supply Chain Management)
<code>
产品溯源、物流管理、供应链金融等应用。
</code>;
****:区块链在数字版权管理的应用(Application in Digital Copyright Management)
<code>
鉴定、版权登记、溯源等应用。
</code>;
****:区块链在医药领域的应用(Application in Pharmaceutical Industry)
<code>
药品追溯、医疗记录管理、医疗物流等应用。
</code>;
****:区块链在公共服务领域的应用(Application in Public Services)
<code>
不动产登记、政务公开、选举投票等应用。
</code>;

**:中间件层(layer1.5)
<code>
由于“layer1.5”只是一种临时命名方式，因此并没有一个固定的名称。
不过，有些人将这种介于层1和层2之间的技术称为“中间件层”（Middleware Layer），
或者将其视为“协议栈层”（Protocol Stack Layer）中的一部分。
还有人将其视为“公链基础设施扩展层”（Public Chain Infrastructure Extension Layer）
或者“公链基础层增强版”（Enhanced Version of Layer1）等等。

总之，这种命名命名方式并不是固定的，有多种可能性。
</code>;
***:零知识证明(Zero Knowledge Proof, ZKP)
<code>
一种能够证明某个事实的方法，但不会泄露任何有关该事实的信息。
</code>;
** 扩展层（Layer2）
*** 侧链
**** IOST
**** 跨链技术
**** 等
*** 集成层
**** IPFS
**** OrbitDB
**** Swarm
**** 等
*** 二层扩展
**** 闪电网络
**** Plasma

** 应用层（Layer3）
*** 去中心化交换协议（DEX）
*** 去中心化金融（DeFi）应用
*** 区块链游戏
*** 区块链溯源应用
*** 区块链存证应用等

** Web3开发层级
*** Web3基础知识层
**** Solidity语言
**** 智能合约编写
**** 以太坊、EOS等区块链的RPC交互方式等
*** 架构层
**** 前端层：HTML、CSS、JavaScript、MVC等
**** 后端层：web框架、数据库、RPC、RESTful API等
**** 区块链层：节点管理、通信协议、事件调度等
*** 安全层
**** 非对称加密算法：RSA、ECDSA等
**** 智能合约安全编写：防止重入攻击、避免整数溢出等
**** 数据加密和数字签名
**** 零知识证明：用于确保数据的隐私性的加密技术，通常被应用于区块链中的隐私保护方案，例如匿名交易等。
*** 网络层
**** 点对点网络
**** 矿工
**** 节点
@endmindmap