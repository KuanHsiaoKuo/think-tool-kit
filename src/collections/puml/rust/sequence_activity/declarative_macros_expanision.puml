@startuml
|Tokenization|
start
  :输入 Rust 代码;
  :将代码解析成 token;
  :将 token 存储为输入语法树;
|Parsing|
  :读取输入语法树;
  :将语法树转换成 Rust 代码结构;
  :用语法树分析器确定宏的实现方法;
  :生成宏的实现代码;
|Expansion|
  :用实现代码扩展语法树;
  :将宏形式参数输入宏展开;
  :将语法树转换成 Rust 代码结构;
  :重新处理代码;
  :生成最终的代码;
end

@enduml