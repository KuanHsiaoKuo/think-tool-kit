@startmindmap
* 内存管理
** safe
*** 内存布局
**** 内存对齐
**** 字节对齐
*** 堆栈
**** 栈
***** 默认放在栈上
**** 堆
***** 堆数据结构
***** 堆内存
***** 堆分配
****** 链表
****** 位图
*** 分配与释放
**** 内存分配器
***** 系统分配器
***** 自定义分配器
****** jemalloc
****** tcmalloc
**** RAII
***** Resource Acquisition Is Initialization
**** 引用计数(Arc<T>和Weak<T>)
*** 所有权
**** 单一所有权
***** Copy/Move
***** 借用
****** 借用规则
******* 三条规则
******* 规则缺陷
******* MIR
****** 生命周期
******* 生命周期参数
******** 函数签名
******** 方法签名
******** 结构体/枚举体
******** 静态
******* 生命周期省略
******** trait对象生命周期
******** 泛型生命周期
***** 借用检查
***** 解引用获得所有权
***** 所有权规则
**** 共享所有权
***** Rc<T>和Weak<T>
** unsafe
*** 裸指针
**** mut T和const T
***** 解引用
***** 转换
****** as
****** transmute
***** 转换检查
****** is_aligned_and_not_null
****** is_null
****** offset
**** 非限制裸指针
*** 生命周期
**** 生命周期参数
***** 函数签名
***** 方法签名
***** 结构体/枚举体
***** 静态
****** 生命周期省略
***** trait对象生命周期
***** 泛型生命周期
*** trait
**** unsafe
***** unsafe 标记
**** Pin
***** Pin 原理
***** Pin 对象的安全保证
**** UnsafeCell
***** UnsafeCell 原理
***** UnsafeCell 的限制和应用
**** marker trait
***** Send
***** Sync
***** PhantomData
*** 禁止写unsafe代码的最佳实践
**** NLL
**** 语义版本控制
**** 集成测试
**** 优化和安全性的平衡
@endmindmap